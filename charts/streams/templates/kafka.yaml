---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka
data:
  CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
  KAFKA_NODE_ID: "1"
  KAFKA_BROKER_ID: "1"
  KAFKA_PROCESS_ROLES: "controller,broker"
  KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
  KAFKA_LISTENERS: >
    PLAINTEXT://:{{ .Values.kafka.port }},
    CONTROLLER://:{{ .Values.controller.port }},
    EXTERNAL://:{{ .Values.kafka.externalPort }}
  KAFKA_ADVERTISED_LISTENERS: >
    PLAINTEXT://kafka:{{ .Values.kafka.port }},
    EXTERNAL://localhost:{{ .Values.kafka.externalPort }}
  KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:{{ .Values.controller.port }}"  # voter: node.id
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
  KAFKA_NUM_PARTITIONS: "2"
  KAFKA_TOPIC_AUTO_CREATE: "true"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: {{ .Values.kafka.image }}
          ports:
            - containerPort: {{ .Values.kafka.port }}
            - containerPort: {{ .Values.controller.port }}
            - containerPort: {{ .Values.kafka.externalPort }}
          envFrom:
            - configMapRef:
                name: kafka-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: {{ .Values.global.storageClass }}
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - name: kafka
      port: {{ .Values.kafka.port }}
      protocol: TCP
      targetPort: {{ .Values.kafka.port }}
