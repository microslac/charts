---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-connect
data:
  CONNECT_GROUP_ID: '1'
  CONNECT_REST_PORT: {{ .Values.connect.port | quote }}
  CONNECT_BOOTSTRAP_SERVERS: 'kafka:{{ .Values.kafka.port }}'
  CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
  CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
  CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
  CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema:{{ .Values.schema.port }}'
  CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema:{{ .Values.schema.port }}'
  CONNECT_CONFIG_STORAGE_TOPIC: 'connect_configs'
  CONNECT_OFFSET_STORAGE_TOPIC: 'connect_offsets'
  CONNECT_STATUS_STORAGE_TOPIC: 'connect_statuses'
  CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
  CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
  CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
  CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
        - name: kafka-connect
          image: {{ .Values.connect.image }}
          imagePullPolicy: {{ .Values.connect.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.connect.port }}
          envFrom:
            - configMapRef:
                name: kafka-connect-config
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-connect
spec:
  selector:
    app: kafka-connect
  ports:
    - name: kafka-connect
      port: {{ .Values.connect.port }}
      protocol: TCP
