---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-schema-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-schema
data:
  SCHEMA_REGISTRY_HOST_NAME: 'kafka-schema'
  SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:{{ .Values.kafka.port }}'
  SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:{{ .Values.schema.port }},http://localhost:{{ .Values.schema.externalPort }}'
  SCHEMA_REGISTRY_DEBUG: 'true'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-schema
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-schema
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-schema
  template:
    metadata:
      labels:
        app: kafka-schema
    spec:
      containers:
        - name: kafka-schema
          image: {{ .Values.schema.image }}
          ports:
            - containerPort: {{ .Values.schema.port }}
          envFrom:
            - configMapRef:
                name: kafka-schema-config
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-schema
  namespace: {{ .Release.Namespace }}
  labels:
    app: kafka-schema
spec:
  type: NodePort
  selector:
    app: kafka-schema
  ports:
    - name: kafka-schema
      protocol: TCP
      port: {{ .Values.schema.port }}
      targetPort: {{ .Values.schema.port }}
